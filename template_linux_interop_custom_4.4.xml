<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2022-12-07T18:35:01Z</date>
    <groups>
        <group>
            <name>HML</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Customer INTEROP LINUX</template>
            <name>Template Customer INTEROP LINUX</name>
            <groups>
                <group>
                    <name>HML</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Linux Disk Volume</name>
                </application>
                <application>
                    <name>Monitoring agent</name>
                </application>
                <application>
                    <name>Network interfaces</name>
                </application>
                <application>
                    <name>OS Linux</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Host name of Zabbix agent running</name>
                    <key>agent.hostname</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Monitoring agent</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Zabbix agent ping</name>
                    <key>agent.ping</key>
                    <history>7d</history>
                    <description>The agent always returns 1 for this item. It could be used in combination with nodata() for availability check.</description>
                    <applications>
                        <application>
                            <name>Monitoring agent</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Zabbix agent ping status</name>
                    </valuemap>
                </item>
                <item>
                    <name>Version of Zabbix agent running</name>
                    <key>agent.version</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Monitoring agent</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Host Alive</name>
                    <type>CALCULATED</type>
                    <key>hostalive</key>
                    <params>(last("icmpping")) + (last("net.tcp.service[ssh,{HOST.CONN},{$SSH_PORT}]"))</params>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(2m)}=0</expression>
                            <name>Host down!</name>
                            <priority>DISASTER</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ICMP Ping</name>
                    <type>SIMPLE</type>
                    <key>icmpping</key>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Machine No Answer for ICMP</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>SSH Port</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[ssh,{HOST.CONN},{$SSH_PORT}]</key>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>SSH port is closed</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zumbi Processes</name>
                    <key>proc.num[,,zomb,]</key>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;5</expression>
                            <name>Zumbi Processes hit threshold. (&gt;5). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Load</name>
                    <key>system.cpu.load[all,avg5]</key>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;=3 and {last()}&lt;4</expression>
                            <name>Load hit threshold (&gt;3 &lt;4). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Load hit threshold (&gt;4). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>{Template Customer INTEROP LINUX:system.cpu.load[all,avg5].last()}&gt;=4</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{last()}&gt;=4</expression>
                            <name>Load hit threshold (&gt;4). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Percentage CPU Utilization</name>
                    <key>system.cpu.util</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;{$CPU.UTIL.CRIT} and {last()}&gt;={$CPU.UTIL.WARN}</expression>
                            <name>Percentage CPU Utilization hit threshold. (&gt;85 &lt;90). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Percentage CPU Utilization hit threshold. (&gt;90). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>{Template Customer INTEROP LINUX:system.cpu.util.last()}&gt;={$CPU.UTIL.CRIT}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{last()}&gt;={$CPU.UTIL.CRIT}</expression>
                            <name>Percentage CPU Utilization hit threshold. (&gt;90). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Swap Percent Free</name>
                    <key>system.swap.size[,pfree]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(5)}&lt;={$SWAP.PFREE.MIN.WARN} and {last()}&gt;{$SWAP.PFREE.MIN.AVG}</expression>
                            <name>Swap Percent Free hit threshold (&lt;25 &gt;10). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Swap Percent Free hit threshold. (&lt;10). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>{Template Customer INTEROP LINUX:system.swap.size[,pfree].min(5)}&lt;{$SWAP.PFREE.MIN.AVG}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{min(5)}&lt;{$SWAP.PFREE.MIN.AVG}</expression>
                            <name>Swap Percent Free hit threshold. (&lt;10). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Uptime</name>
                    <key>system.uptime</key>
                    <units>uptime</units>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;10m and {last()}&lt;=20m</expression>
                            <name>Uptime hit threshold (&lt;1200 &gt;600). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Uptime hit threshold. (&lt;600). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>{Template Customer INTEROP LINUX:system.uptime.last()}&lt;=10m</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{last()}&lt;=10m</expression>
                            <name>Uptime hit threshold. (&lt;600). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Get /proc/diskstats</name>
                    <key>vfs.file.contents[/proc/diskstats]</key>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var parsed = value.split(&quot;\n&quot;).reduce(function(acc, x, i) {
  parts = x.trim().split(/ +/)
  acc[&quot;values&quot;][parts[2]] = parts
  acc[&quot;lld&quot;].push({"{#DEVNAME}":parts[2]})
  return acc;
}, {"values":{}, "lld": []});

return JSON.stringify(parsed);</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Physical Memory % Usage</name>
                    <key>vm.memory.size[pavailable]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>OS Linux</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(5)}&gt;={$MEMORY.UTIL.WARN} and {last()}&lt;{$MEMORY.UTIL.MAX}</expression>
                            <name>Physical Memory % Usage hit threshold (&gt;80 &lt;85). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Physical Memory % Usage hit threshold. (&gt;85). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>{Template Customer INTEROP LINUX:vm.memory.size[pavailable].min(5)}&gt;{$MEMORY.UTIL.MAX}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{min(5)}&gt;{$MEMORY.UTIL.MAX}</expression>
                            <name>Physical Memory % Usage hit threshold. (&gt;85). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Zabbix agent availability</name>
                    <type>INTERNAL</type>
                    <key>zabbix[host,agent,available]</key>
                    <history>7d</history>
                    <description>Monitoring agent availability status</description>
                    <applications>
                        <application>
                            <name>Monitoring agent</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>zabbix.host.available</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{max({$AGENT.TIMEOUT})}=0</expression>
                            <name>Zabbix agent is not available (for {$AGENT.TIMEOUT})</name>
                            <priority>HIGH</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Network interface discovery</name>
                    <key>net.if.discovery</key>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Inbound packets discarded</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Inbound packets with errors</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Bits received</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Outbound packets discarded</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Outbound packets with errors</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Bits sent</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Operational status</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;]</key>
                            <history>7d</history>
                            <trends>0</trends>
                            <description>Indicates the interface RFC2863 operational state as a string.&#13;
Possible values are:&quot;unknown&quot;, &quot;notpresent&quot;, &quot;down&quot;, &quot;lowerlayerdown&quot;, &quot;testing&quot;,&quot;dormant&quot;, &quot;up&quot;.&#13;
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>IF-MIB::ifOperStatus</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>var newvalue;
switch(value) {
  case &quot;up&quot;:
    newvalue = 1;
    break;
  case &quot;down&quot;:
    newvalue = 2;
    break;
  case &quot;testing&quot;:
    newvalue = 4;
    break;
  case &quot;unknown&quot;:
    newvalue = 5;
    break;
  case &quot;dormant&quot;:
    newvalue = 6;
    break;
  case &quot;notPresent&quot;:
    newvalue = 7;
    break;
  default:
    newvalue = &quot;Problem parsing interface operstate in JS&quot;;
}
return newvalue;</params>
                                </step>
                            </preprocessing>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and {last()}=2 and ({diff()}=1)</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{last()}&lt;&gt;2</recovery_expression>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>This trigger expression works as follows:&#13;
1. Can be triggered if operations status is down.&#13;
2. {$IFCONTROL:&quot;{#IFNAME}&quot;}=1 - user can redefine Context macro to value - 0. That marks this interface as not important. No new trigger will be fired if this interface is down.&#13;
3. {TEMPLATE_NAME:METRIC.diff()}=1) - trigger fires only if operational status was up(1) sometime before. (So, do not fire 'ethernal off' interfaces.)&#13;
&#13;
WARNING: if closed manually - won't fire again on next poll, because of .diff.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Interface type</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;]</key>
                            <delay>1h</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <description>Indicates the interface protocol type as a decimal value.&#13;
See include/uapi/linux/if_arp.h for all possible values.&#13;
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Linux::Interface protocol types</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].change()}<0 and {Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].last()}>0 and ({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].last()}=6 or {Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].last()}=1) and ({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}<>2)</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].change()}>0 and  {Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;].prev()}>0) or ({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}=2)</recovery_expression>
                            <name>Interface {#IFNAME}: Ethernet has changed to lower speed than it was before</name>
                            <opdata>Current reported speed: {ITEM.LASTVALUE1}</opdata>
                            <status>DISABLED</status>
                            <priority>INFO</priority>
                            <description>This Ethernet connection has transitioned down from its known maximum speed. This might be a sign of autonegotiation issues. Ack to close.</description>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}=2 and ({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].diff()}=1)</expression>
                                    <recovery_expression>{Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}<>2</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Customer INTEROP LINUX:net.if.in[&quot;{#IFNAME}&quot;,errors].min(5m)}>{$IF.ERRORS.WARN:"{#IFNAME}"} or {Template Customer INTEROP LINUX:net.if.out[&quot;{#IFNAME}&quot;,errors].min(5m)}>{$IF.ERRORS.WARN:"{#IFNAME}"}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Customer INTEROP LINUX:net.if.in[&quot;{#IFNAME}&quot;,errors].max(5m)}<{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8 and {Template Customer INTEROP LINUX:net.if.out[&quot;{#IFNAME}&quot;,errors].last(5m)}<{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8</recovery_expression>
                            <name>Interface {#IFNAME}: High error rate ( &gt; {$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} for 5m)</name>
                            <opdata>errors in: {ITEM.LASTVALUE1}, errors out: {ITEM.LASTVALUE2}</opdata>
                            <priority>AVERAGE</priority>
                            <description>Recovers when below 80% of {$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} threshold</description>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}=2 and ({Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].diff()}=1)</expression>
                                    <recovery_expression>{Template Customer INTEROP LINUX:vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;].last()}<>2</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Block devices discovery</name>
                    <type>DEPENDENT</type>
                    <key>vfs.dev.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk average queue size (avgqu-sz)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][13]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk read request avg waiting time (r_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.read.await[{#DEVNAME}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last("vfs.dev.read.time.rate[{#DEVNAME}]")/(last("vfs.dev.read.rate[{#DEVNAME}]")+(last("vfs.dev.read.rate[{#DEVNAME}]")=0)))*1000*(last("vfs.dev.read.rate[{#DEVNAME}]") > 0)</params>
                            <description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk read rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!r/s</units>
                            <description>r/s. The number (after merges) of read requests completed per second for the device.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][3]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk read time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][6]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk utilization</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.util[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][12]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.1</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk write request avg waiting time (w_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.write.await[{#DEVNAME}]</key>
                            <history>7d</history>
                            <units>!ms</units>
                            <params>(last("vfs.dev.write.time.rate[{#DEVNAME}]")/(last("vfs.dev.write.rate[{#DEVNAME}]")+(last("vfs.dev.write.rate[{#DEVNAME}]")=0)))*1000*(last("vfs.dev.write.rate[{#DEVNAME}]") > 0)</params>
                            <description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk write rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!w/s</units>
                            <description>w/s. The number (after merges) of write requests completed per second for the device.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][7]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk write time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <description>Rate of total write time counter. Used in w_await calculation</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.values['{#DEVNAME}'][10]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Customer INTEROP LINUX:vfs.dev.read.await[{#DEVNAME}].min(15)}>{$VFS.DEV.READ.AWAIT.WARN:"{#DEVNAME}"} or {Template Customer INTEROP LINUX:vfs.dev.write.await[{#DEVNAME}].min(15)}>{$VFS.DEV.WRITE.AWAIT.WARN:"{#DEVNAME}"}</expression>
                            <name>{#DEVNAME}: Disk read/write request response are too high (read &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m or write &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m)</name>
                            <priority>WARNING</priority>
                            <description>This trigger might indicate disk {#DEVNAME} saturation.</description>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>vfs.file.contents[/proc/diskstats]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.lld</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>Mounted filesystem discovery</name>
                    <key>vfs.fs.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>D</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                                <formulaid>C</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#FSNAME}: Free inodes in %</name>
                            <key>vfs.fs.inode[{#FSNAME},pfree]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk Volume {#FSNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                    <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>HIGH</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}</expression>
                                    <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                        </dependency>
                                        <dependency>
                                            <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                            <expression>{Template Customer INTEROP LINUX:vfs.fs.inode[{#FSNAME},pfree].min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#FSNAME}: % Used Space</name>
                            <key>vfs.fs.size[{#FSNAME},pused]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Linux Disk Volume {#FSNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$VFS.FS.PUSED.MAX.CRIT}</expression>
                                    <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>HIGH</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$VFS.FS.PUSED.MAX.WARN}</expression>
                                    <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>{Template Customer INTEROP LINUX:hostalive.min(2m)}=0</expression>
                                        </dependency>
                                        <dependency>
                                            <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                            <expression>{Template Customer INTEROP LINUX:vfs.fs.size[{#FSNAME},pused].min(5m)}&gt;{$VFS.FS.PUSED.MAX.CRIT}</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$AGENT.TIMEOUT}</macro>
                    <value>3m</value>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.CRIT}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.WARN}</macro>
                    <value>85</value>
                </macro>
                <macro>
                    <macro>{$IF.ERRORS.WARN}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$IF.UTIL.MAX}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$IFCONTROL}</macro>
                    <value>1</value>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.MAX}</macro>
                    <value>85</value>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.WARN}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.MATCHES}</macro>
                    <value>^.*$</value>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
                    <value>(^Software Loopback Interface|^NULL[0-9.]*$|^[Ll]o[0-9.]*$|^[Ss]ystem$|^Nu[0-9.]*$|^veth[0-9a-z]+$|docker[0-9]+|br-[a-z0-9]{12})</value>
                    <description>Filter out loopbacks, nulls, docker veth links and docker0 bridge by default</description>
                </macro>
                <macro>
                    <macro>{$SSH_PORT}</macro>
                    <value>22</value>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.AVG}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.WARN}</macro>
                    <value>25</value>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
                    <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+)</value>
                    <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.READ.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>Disk read average response time (in ms) before the trigger would fire</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.WRITE.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>Disk write average response time (in ms) before the trigger would fire</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
                    <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
                    <value>^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
                    <value>^\s$</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
                    <value>80</value>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>IF-MIB::ifOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>up</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>down</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>dormant</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>notPresent</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>lowerLayerDown</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Linux::Interface protocol types</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>from KA9Q: NET/ROM pseudo</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Ethernet 10Mbps</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Experimental Ethernet</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>AX.25 Level 2</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>PROnet token ring</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Chaosnet</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>IEEE 802.2 Ethernet/TR/TB</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>ARCnet</newvalue>
                </mapping>
                <mapping>
                    <value>8</value>
                    <newvalue>APPLEtalk</newvalue>
                </mapping>
                <mapping>
                    <value>15</value>
                    <newvalue>Frame Relay DLCI</newvalue>
                </mapping>
                <mapping>
                    <value>19</value>
                    <newvalue>ATM</newvalue>
                </mapping>
                <mapping>
                    <value>23</value>
                    <newvalue>Metricom STRIP (new IANA id)</newvalue>
                </mapping>
                <mapping>
                    <value>24</value>
                    <newvalue>IEEE 1394 IPv4 - RFC 2734</newvalue>
                </mapping>
                <mapping>
                    <value>27</value>
                    <newvalue>EUI-64</newvalue>
                </mapping>
                <mapping>
                    <value>32</value>
                    <newvalue>InfiniBand</newvalue>
                </mapping>
                <mapping>
                    <value>256</value>
                    <newvalue>ARPHRD_SLIP</newvalue>
                </mapping>
                <mapping>
                    <value>257</value>
                    <newvalue>ARPHRD_CSLIP</newvalue>
                </mapping>
                <mapping>
                    <value>258</value>
                    <newvalue>ARPHRD_SLIP6</newvalue>
                </mapping>
                <mapping>
                    <value>259</value>
                    <newvalue>ARPHRD_CSLIP6</newvalue>
                </mapping>
                <mapping>
                    <value>260</value>
                    <newvalue>Notional KISS type</newvalue>
                </mapping>
                <mapping>
                    <value>264</value>
                    <newvalue>ARPHRD_ADAPT</newvalue>
                </mapping>
                <mapping>
                    <value>270</value>
                    <newvalue>ARPHRD_ROSE</newvalue>
                </mapping>
                <mapping>
                    <value>271</value>
                    <newvalue>CCITT X.25</newvalue>
                </mapping>
                <mapping>
                    <value>272</value>
                    <newvalue>Boards with X.25 in firmware</newvalue>
                </mapping>
                <mapping>
                    <value>280</value>
                    <newvalue>Controller Area Network</newvalue>
                </mapping>
                <mapping>
                    <value>512</value>
                    <newvalue>ARPHRD_PPP</newvalue>
                </mapping>
                <mapping>
                    <value>513</value>
                    <newvalue>Cisco HDLC</newvalue>
                </mapping>
                <mapping>
                    <value>516</value>
                    <newvalue>LAPB</newvalue>
                </mapping>
                <mapping>
                    <value>517</value>
                    <newvalue>Digital's DDCMP protocol</newvalue>
                </mapping>
                <mapping>
                    <value>518</value>
                    <newvalue>Raw HDLC</newvalue>
                </mapping>
                <mapping>
                    <value>519</value>
                    <newvalue>Raw IP</newvalue>
                </mapping>
                <mapping>
                    <value>768</value>
                    <newvalue>IPIP tunnel</newvalue>
                </mapping>
                <mapping>
                    <value>769</value>
                    <newvalue>IP6IP6 tunnel</newvalue>
                </mapping>
                <mapping>
                    <value>770</value>
                    <newvalue>Frame Relay Access Device</newvalue>
                </mapping>
                <mapping>
                    <value>771</value>
                    <newvalue>SKIP vif</newvalue>
                </mapping>
                <mapping>
                    <value>772</value>
                    <newvalue>Loopback device</newvalue>
                </mapping>
                <mapping>
                    <value>773</value>
                    <newvalue>Localtalk device</newvalue>
                </mapping>
                <mapping>
                    <value>774</value>
                    <newvalue>Fiber Distributed Data Interface</newvalue>
                </mapping>
                <mapping>
                    <value>775</value>
                    <newvalue>AP1000 BIF</newvalue>
                </mapping>
                <mapping>
                    <value>776</value>
                    <newvalue>sit0 device - IPv6-in-IPv4</newvalue>
                </mapping>
                <mapping>
                    <value>777</value>
                    <newvalue>IP over DDP tunneller</newvalue>
                </mapping>
                <mapping>
                    <value>778</value>
                    <newvalue>GRE over IP</newvalue>
                </mapping>
                <mapping>
                    <value>779</value>
                    <newvalue>PIMSM register interface</newvalue>
                </mapping>
                <mapping>
                    <value>780</value>
                    <newvalue>High Performance Parallel Interface</newvalue>
                </mapping>
                <mapping>
                    <value>781</value>
                    <newvalue>Nexus 64Mbps Ash</newvalue>
                </mapping>
                <mapping>
                    <value>782</value>
                    <newvalue>Acorn Econet</newvalue>
                </mapping>
                <mapping>
                    <value>783</value>
                    <newvalue>Linux-IrDA</newvalue>
                </mapping>
                <mapping>
                    <value>784</value>
                    <newvalue>Point to point fibrechannel</newvalue>
                </mapping>
                <mapping>
                    <value>785</value>
                    <newvalue>Fibrechannel arbitrated loop</newvalue>
                </mapping>
                <mapping>
                    <value>786</value>
                    <newvalue>Fibrechannel public loop</newvalue>
                </mapping>
                <mapping>
                    <value>787</value>
                    <newvalue>Fibrechannel fabric</newvalue>
                </mapping>
                <mapping>
                    <value>800</value>
                    <newvalue>Magic type ident for TR</newvalue>
                </mapping>
                <mapping>
                    <value>801</value>
                    <newvalue>IEEE 802.11</newvalue>
                </mapping>
                <mapping>
                    <value>802</value>
                    <newvalue>IEEE 802.11 + Prism2 header</newvalue>
                </mapping>
                <mapping>
                    <value>803</value>
                    <newvalue>IEEE 802.11 + radiotap header</newvalue>
                </mapping>
                <mapping>
                    <value>804</value>
                    <newvalue>ARPHRD_IEEE802154</newvalue>
                </mapping>
                <mapping>
                    <value>805</value>
                    <newvalue>IEEE 802.15.4 network monitor</newvalue>
                </mapping>
                <mapping>
                    <value>820</value>
                    <newvalue>PhoNet media type</newvalue>
                </mapping>
                <mapping>
                    <value>821</value>
                    <newvalue>PhoNet pipe header</newvalue>
                </mapping>
                <mapping>
                    <value>822</value>
                    <newvalue>CAIF media type</newvalue>
                </mapping>
                <mapping>
                    <value>823</value>
                    <newvalue>GRE over IPv6</newvalue>
                </mapping>
                <mapping>
                    <value>824</value>
                    <newvalue>Netlink header</newvalue>
                </mapping>
                <mapping>
                    <value>825</value>
                    <newvalue>IPv6 over LoWPAN</newvalue>
                </mapping>
                <mapping>
                    <value>826</value>
                    <newvalue>Vsock monitor header</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>zabbix.host.available</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>not available</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>available</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>unknown</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Zabbix agent ping status</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>