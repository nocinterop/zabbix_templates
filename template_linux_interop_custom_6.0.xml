<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.0</version>
    <date>2023-02-15T12:35:21Z</date>
    <groups>
        <group>
            <uuid>1961019ccff84f0aabb54eb2f9328323</uuid>
            <name>Novo Template Linux Interop</name>
        </group>
    </groups>
    <templates>
        <template>
            <uuid>9def8e1328ee4d6686f49b4986c20e7b</uuid>
            <template>Template Linux INTEROP Custom</template>
            <name>Template Linux INTEROP Custom</name>
            <groups>
                <group>
                    <name>Novo Template Linux Interop</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>43c3b9cd64da47d184aa442e2b0f8b2a</uuid>
                    <name>Host Alive</name>
                    <type>CALCULATED</type>
                    <key>hostalive</key>
                    <params>(last(//icmpping)) + (last(//net.tcp.service[ssh,{HOST.CONN},{$SSH_PORT}]))</params>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>d884ebfc227a4555b5c340096853691b</uuid>
                            <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                            <name>Host down!</name>
                            <priority>DISASTER</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>f34a864207104d219b3c1f3f4608028e</uuid>
                    <name>Ping Status</name>
                    <type>SIMPLE</type>
                    <key>icmpping</key>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>91a094755ede47a9894c9b604d8bd689</uuid>
                            <expression>last(/Template Linux INTEROP Custom/icmpping)=0</expression>
                            <name>Machine No Answer for ICMP</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>359a8f4b9b5c457ba39b2225494b012a</uuid>
                    <name>SSH Port</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[ssh,{HOST.CONN},{$SSH_PORT}]</key>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>2aaba42795054317a8ce5a5aebe9cf11</uuid>
                            <expression>last(/Template Linux INTEROP Custom/net.tcp.service[ssh,{HOST.CONN},{$SSH_PORT}])=0</expression>
                            <name>SSH port is closed</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>178b932a53ed472597161aafd697d808</uuid>
                    <name>Zumbi Processes</name>
                    <key>proc.num[,,zomb,]</key>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>25f5a5cf1a2549b1866a84863f744a64</uuid>
                            <expression>last(/Template Linux INTEROP Custom/proc.num[,,zomb,])&gt;5</expression>
                            <name>Zumbi Processes hit threshold. (&gt;5). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>d1c2f1786cfe42758dc441567d94e88a</uuid>
                    <name>Discover geral Services</name>
                    <key>services.raw</key>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS raw itens</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>59e136ae5ea747238c207b35b82ae069</uuid>
                    <name>Load Usage</name>
                    <key>system.cpu.load[all,avg5]</key>
                    <value_type>FLOAT</value_type>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>2b8164196a204095b9350fb5244ca4ae</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.cpu.load[all,avg5])&gt;=3 and last(/Template Linux INTEROP Custom/system.cpu.load[all,avg5])&lt;4</expression>
                            <name>Load hit threshold (&gt;3 &lt;4). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Load hit threshold (&gt;4). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>last(/Template Linux INTEROP Custom/system.cpu.load[all,avg5])&gt;=4</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <uuid>95ea2a77a09e4c3188dd0ec9db5571e0</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.cpu.load[all,avg5])&gt;=4</expression>
                            <name>Load hit threshold (&gt;4). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>0fe43c68bc9643a29697b6df9e0b9b90</uuid>
                    <name>CPU % Avg Usage</name>
                    <key>system.cpu.util</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>06b4331688d74ab5a2361e9119667faa</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.cpu.util)&lt;{$CPU.UTIL.CRIT} and last(/Template Linux INTEROP Custom/system.cpu.util)&gt;={$CPU.UTIL.WARN}</expression>
                            <name>Percentage CPU Utilization hit threshold. (&gt;95 &lt;98). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Percentage CPU Utilization hit threshold. (&gt;98). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>last(/Template Linux INTEROP Custom/system.cpu.util)&gt;={$CPU.UTIL.CRIT}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <uuid>2122e8c7b6a04cec8a4916a3579fb759</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.cpu.util)&gt;={$CPU.UTIL.CRIT}</expression>
                            <name>Percentage CPU Utilization hit threshold. (&gt;98). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>e199c09839c24dbcabae3c77cc9715df</uuid>
                    <name>Swap Percent Free</name>
                    <key>system.swap.size[,pfree]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>395a52eda6e54c8a8daa0dbe7af8770b</uuid>
                            <expression>min(/Template Linux INTEROP Custom/system.swap.size[,pfree],5s)&lt;={$SWAP.PFREE.MIN.WARN} and last(/Template Linux INTEROP Custom/system.swap.size[,pfree])&gt;{$SWAP.PFREE.MIN.AVG}</expression>
                            <name>Swap Percent Free hit threshold (&lt;25 &gt;10). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Swap Percent Free hit threshold. (&lt;10). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>min(/Template Linux INTEROP Custom/system.swap.size[,pfree],5s)&lt;{$SWAP.PFREE.MIN.AVG}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <uuid>99edba5004484e42be33651acc795b2b</uuid>
                            <expression>min(/Template Linux INTEROP Custom/system.swap.size[,pfree],5s)&lt;{$SWAP.PFREE.MIN.AVG}</expression>
                            <name>Swap Percent Free hit threshold. (&lt;10). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>29f95ad536d94af397f1235d17b709c7</uuid>
                    <name>UpTime in Seconds</name>
                    <key>system.uptime</key>
                    <units>uptime</units>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>c268241c445a47b7ab7493770eed4b01</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.uptime)&gt;10m and last(/Template Linux INTEROP Custom/system.uptime)&lt;=20m</expression>
                            <name>Uptime hit threshold (&lt;1200 &gt;600). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Uptime hit threshold. (&lt;600). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>last(/Template Linux INTEROP Custom/system.uptime)&lt;=10m</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <uuid>9311e231f0de4a4d9299ee5d2928af99</uuid>
                            <expression>last(/Template Linux INTEROP Custom/system.uptime)&lt;=10m</expression>
                            <name>Uptime hit threshold. (&lt;600). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>985949b57618494eab2cbc368975059c</uuid>
                    <name>Get /proc/diskstats</name>
                    <key>vfs.file.contents[/proc/diskstats]</key>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>var parsed = value.split(&quot;\n&quot;).reduce(function(acc, x, i) {
  parts = x.trim().split(/ +/)
  acc[&quot;values&quot;][parts[2]] = parts
  acc[&quot;lld&quot;].push({&quot;{#DEVNAME}&quot;:parts[2]})
  return acc;
}, {&quot;values&quot;:{}, &quot;lld&quot;: []});

return JSON.stringify(parsed);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS raw itens</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>5981e9e3112046eebc4c94278dc7e63b</uuid>
                    <name>Physical Memory Used</name>
                    <key>vm.memory.size[pavailable]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return (100-value);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>OS</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>c2e00b549bf84a00aca627429c6c7189</uuid>
                            <expression>min(/Template Linux INTEROP Custom/vm.memory.size[pavailable],5s)&gt;={$MEMORY.UTIL.WARN} and last(/Template Linux INTEROP Custom/vm.memory.size[pavailable])&lt;{$MEMORY.UTIL.MAX}</expression>
                            <name>Physical Memory % Usage hit threshold (&gt;95 &lt;98). Current value: {ITEM.LASTVALUE}</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                                <dependency>
                                    <name>Physical Memory % Usage hit threshold. (&gt;98). Current value: {ITEM.LASTVALUE}</name>
                                    <expression>min(/Template Linux INTEROP Custom/vm.memory.size[pavailable],5s)&gt;{$MEMORY.UTIL.MAX}</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <uuid>a967ce9fd5e5448e86c45cee0bf0b5c9</uuid>
                            <expression>min(/Template Linux INTEROP Custom/vm.memory.size[pavailable],5s)&gt;{$MEMORY.UTIL.MAX}</expression>
                            <name>Physical Memory % Usage hit threshold. (&gt;98). Current value: {ITEM.LASTVALUE}</name>
                            <priority>AVERAGE</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>9791a7d360fd430c81757a7ee4bf79b3</uuid>
                    <name>Zabbix agent availability</name>
                    <type>INTERNAL</type>
                    <key>zabbix[host,agent,available]</key>
                    <history>7d</history>
                    <description>Monitoring agent availability status</description>
                    <valuemap>
                        <name>zabbix.host.available</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>Type</tag>
                            <value>Application</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>9169d346d39842fca4ada062ff7af2cb</uuid>
                            <expression>max(/Template Linux INTEROP Custom/zabbix[host,agent,available],{$AGENT.TIMEOUT})=0</expression>
                            <name>Zabbix agent is not available (for {$AGENT.TIMEOUT})</name>
                            <priority>DISASTER</priority>
                            <dependencies>
                                <dependency>
                                    <name>Host down!</name>
                                    <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>6c6fa18ce625451a96bf9e5626e5ffcb</uuid>
                    <name>Discovery Services</name>
                    <type>DEPENDENT</type>
                    <key>discovery.services</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>02fb6c0ab5a349d7b8eb2659910f335d</uuid>
                            <name>Service Status {#NAME}</name>
                            <key>systemctl.status[{#NAME}]</key>
                            <valuemap>
                                <name>Linux Service State</name>
                            </valuemap>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Services</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>0ba846a431ff4c76a3839fb05f15fe65</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/systemctl.status[{#NAME}])=0</expression>
                                    <name>Service {#NAME} with status: {ITEM.LASTVALUE}</name>
                                    <priority>DISASTER</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>services.raw</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STATUS}</lld_macro>
                            <path>$.status</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.data</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>b5ad337d7f1541d69067ac6d32ccf961</uuid>
                    <name>Network interface discovery</name>
                    <key>net.if.discovery</key>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>cc5248f974af4488973500449cbeb768</uuid>
                            <name>Interface {#IFNAME}: Inbound Errors</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Interface</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>c34523e4d7274e508038bb1c66240493</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/net.if.in[&quot;{#IFNAME}&quot;,errors])&gt;100</expression>
                                    <name>Interface {#IFNAME}: Inbound Errors hit threshold (&gt;100). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>bd51091b77384feb9353e3943cf3f6cd</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/net.if.in[&quot;{#IFNAME}&quot;,errors])&gt;=75 and last(/Template Linux INTEROP Custom/net.if.in[&quot;{#IFNAME}&quot;,errors])&lt;100</expression>
                                    <name>Interface {#IFNAME}: Inbound Errors hit threshold (&gt;=75 &lt;100). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b738637dc34b4c23a691fd7ac1dfb8a9</uuid>
                            <name>Interface {#IFNAME}: Download Bits Per sec</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Interface</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>abf28906fa1d44469e0797ed3d622d55</uuid>
                            <name>Interface {#IFNAME}: Outbound Errors</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Interface</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>cf75be2711444f3d89b14f502bc54fae</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/net.if.out[&quot;{#IFNAME}&quot;,errors])&gt;=75 and last(/Template Linux INTEROP Custom/net.if.out[&quot;{#IFNAME}&quot;,errors])&lt;100</expression>
                                    <name>Interface {#IFNAME}: Outbound Errors hit threshold (&gt;=75 &lt;100). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>00828bcae4e84075bfdc09c7fb6610d1</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/net.if.out[&quot;{#IFNAME}&quot;,errors])&gt;100</expression>
                                    <name>nterface {#IFNAME}: Outbound Errors hit threshold (&gt;100). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>ef85ddccc3e448d197a1e48bb1e794ef</uuid>
                            <name>Interface {#IFNAME}: Upload Bits per sec</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Interface</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>1a2aeea304f44f6e956060016140bd34</uuid>
                            <name>Interface {#IFNAME}: Interface Oper Status</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;]</key>
                            <history>7d</history>
                            <trends>0</trends>
                            <description>Indicates the interface RFC2863 operational state as a string.
Possible values are:&quot;unknown&quot;, &quot;notpresent&quot;, &quot;down&quot;, &quot;lowerlayerdown&quot;, &quot;testing&quot;,&quot;dormant&quot;, &quot;up&quot;.
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <valuemap>
                                <name>IF-MIB::ifOperStatus</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>var newvalue;
switch(value) {
  case &quot;up&quot;:
    newvalue = 1;
    break;
  case &quot;down&quot;:
    newvalue = 2;
    break;
  case &quot;testing&quot;:
    newvalue = 4;
    break;
  case &quot;unknown&quot;:
    newvalue = 5;
    break;
  case &quot;dormant&quot;:
    newvalue = 6;
    break;
  case &quot;notPresent&quot;:
    newvalue = 7;
    break;
  default:
    newvalue = &quot;Problem parsing interface operstate in JS&quot;;
}
return newvalue;</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Interface</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>24e94a5f604742dab61eed6e940b82fe</uuid>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and ((last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))=1)</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2</recovery_expression>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>DISASTER</priority>
                                    <description>This trigger expression works as follows:
1. Can be triggered if operations status is down.
2. {$IFCONTROL:&quot;{#IFNAME}&quot;}=1 - user can redefine Context macro to value - 0. That marks this interface as not important. No new trigger will be fired if this interface is down.
3. {TEMPLATE_NAME:METRIC.diff()}=1) - trigger fires only if operational status was up(1) sometime before. (So, do not fire 'ethernal off' interfaces.)

WARNING: if closed manually - won't fire again on next poll, because of .diff.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>9e3e869811f04df2a8535e1cd8668667</uuid>
                            <expression>min(/Template Linux INTEROP Custom/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} or min(/Template Linux INTEROP Custom/net.if.out[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>max(/Template Linux INTEROP Custom/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8 and last(/Template Linux INTEROP Custom/net.if.out[&quot;{#IFNAME}&quot;,errors])&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8</recovery_expression>
                            <name>Interface {#IFNAME}: High error rate ( &gt; {$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} for 5m)</name>
                            <opdata>errors in: {ITEM.LASTVALUE1}, errors out: {ITEM.LASTVALUE2}</opdata>
                            <priority>AVERAGE</priority>
                            <description>Recovers when below 80% of {$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} threshold</description>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and ((last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))=1)</expression>
                                    <recovery_expression>last(/Template Linux INTEROP Custom/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>9ec7c680f88c41a296f52aaf67ac3483</uuid>
                    <name>Block devices discovery</name>
                    <type>DEPENDENT</type>
                    <key>vfs.dev.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>34eefd83cdf74198a785c3b0101996d2</uuid>
                            <name>{#DEVNAME}: Disk average queue size (avgqu-sz)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.values['{#DEVNAME}'][13]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>3c8ecab8617b4430b20bd295b4a98c01</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/vfs.dev.queue_size[{#DEVNAME}])&gt;=1 and last(/Template Linux INTEROP Custom/vfs.dev.queue_size[{#DEVNAME}])&lt;2</expression>
                                    <name>{#DEVNAME} Avg Disk Queue Size hit threshold (&gt;=1 &lt;2). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>100bdd8caedf4537a62ac08877efdd6c</uuid>
                                    <expression>last(/Template Linux INTEROP Custom/vfs.dev.queue_size[{#DEVNAME}])&gt;=2</expression>
                                    <name>{#DEVNAME} Avg Disk Queue Size hit threshold (&gt;=2). Current value: {ITEM.LASTVALUE}</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>9373025f36d64f5f9d0793e3398569ed</uuid>
                            <name>{#DEVNAME}: Disk read rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!r/s</units>
                            <description>r/s. The number (after merges) of read requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.values['{#DEVNAME}'][3]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>dc89a12d8781435ba36c8246de59edbb</uuid>
                            <name>{#DEVNAME}: Disk read time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.values['{#DEVNAME}'][6]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b6ad1b4ef9e44e47a08047905b239701</uuid>
                            <name>{#DEVNAME}: Disk write rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!w/s</units>
                            <description>w/s. The number (after merges) of write requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.values['{#DEVNAME}'][7]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e9bc8aaa0c8248db8e9d22c44b252ef4</uuid>
                            <name>{#DEVNAME}: Disk write time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <description>Rate of total write time counter. Used in w_await calculation</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.values['{#DEVNAME}'][10]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/proc/diskstats]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>vfs.file.contents[/proc/diskstats]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.lld</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>293e8e2a6c3440ce8aac1dd82dbc032f</uuid>
                    <name>Mounted filesystem discovery</name>
                    <key>vfs.fs.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                                <formulaid>D</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>86faaa288b0f43559fcce3ab1b6b9ccd</uuid>
                            <name>{#FSNAME}: % Used Space</name>
                            <key>vfs.fs.size[{#FSNAME},pused]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <tags>
                                <tag>
                                    <tag>Type</tag>
                                    <value>Disk</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>46ef2d027c0f4bde9d5505439238b15d</uuid>
                                    <expression>min(/Template Linux INTEROP Custom/vfs.fs.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT}</expression>
                                    <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>HIGH</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>72cb6052dbe046a89b625542a4c7ffe9</uuid>
                                    <expression>min(/Template Linux INTEROP Custom/vfs.fs.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.WARN}</expression>
                                    <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Host down!</name>
                                            <expression>min(/Template Linux INTEROP Custom/hostalive,2m)=0</expression>
                                        </dependency>
                                        <dependency>
                                            <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                            <expression>min(/Template Linux INTEROP Custom/vfs.fs.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT}</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>8590d91884d84045a0e9809929b87946</uuid>
                                    <expression>min(/Template Linux INTEROP Custom/vfs.fs.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.MED}</expression>
                                    <name>{#FSNAME}: Disk space is low (used &gt; {{$VFS.FS.PUSED.MAX.MED}:&quot;{#FSNAME}&quot;}%)</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$AGENT.TIMEOUT}</macro>
                    <value>3m</value>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.CRIT}</macro>
                    <value>98</value>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.WARN}</macro>
                    <value>95</value>
                </macro>
                <macro>
                    <macro>{$IF.ERRORS.WARN}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$IF.UTIL.MAX}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$IFCONTROL}</macro>
                    <value>1</value>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.MAX}</macro>
                    <value>98</value>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.WARN}</macro>
                    <value>95</value>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.MATCHES}</macro>
                    <value>^.*$</value>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
                    <value>(^Software Loopback Interface|^NULL[0-9.]*$|^[Ll]o[0-9.]*$|^[Ss]ystem$|^Nu[0-9.]*$|^veth[0-9a-z]+$|docker[0-9]+|br-[a-z0-9]{12})</value>
                    <description>Filter out loopbacks, nulls, docker veth links and docker0 bridge by default</description>
                </macro>
                <macro>
                    <macro>{$SSH_PORT}</macro>
                    <value>22</value>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.AVG}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.WARN}</macro>
                    <value>25</value>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
                    <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+)</value>
                    <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.READ.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>Disk read average response time (in ms) before the trigger would fire</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.WRITE.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>Disk write average response time (in ms) before the trigger would fire</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
                    <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
                    <value>^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
                    <value>^\s$</value>
                    <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
                    <value>98</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.MED}</macro>
                    <value>95</value>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
                    <value>90</value>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>6eef3a91a13b4d5986a64a7d7a48eab3</uuid>
                    <name>IF-MIB::ifOperStatus</name>
                    <mappings>
                        <mapping>
                            <value>1</value>
                            <newvalue>up</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>down</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>dormant</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>notPresent</newvalue>
                        </mapping>
                        <mapping>
                            <value>7</value>
                            <newvalue>lowerLayerDown</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>18641293c51c4d7f80b629ad1acfc8e7</uuid>
                    <name>Linux::Interface protocol types</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>from KA9Q: NET/ROM pseudo</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>Ethernet 10Mbps</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>Experimental Ethernet</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>AX.25 Level 2</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>PROnet token ring</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>Chaosnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>IEEE 802.2 Ethernet/TR/TB</newvalue>
                        </mapping>
                        <mapping>
                            <value>7</value>
                            <newvalue>ARCnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>8</value>
                            <newvalue>APPLEtalk</newvalue>
                        </mapping>
                        <mapping>
                            <value>15</value>
                            <newvalue>Frame Relay DLCI</newvalue>
                        </mapping>
                        <mapping>
                            <value>19</value>
                            <newvalue>ATM</newvalue>
                        </mapping>
                        <mapping>
                            <value>23</value>
                            <newvalue>Metricom STRIP (new IANA id)</newvalue>
                        </mapping>
                        <mapping>
                            <value>24</value>
                            <newvalue>IEEE 1394 IPv4 - RFC 2734</newvalue>
                        </mapping>
                        <mapping>
                            <value>27</value>
                            <newvalue>EUI-64</newvalue>
                        </mapping>
                        <mapping>
                            <value>32</value>
                            <newvalue>InfiniBand</newvalue>
                        </mapping>
                        <mapping>
                            <value>256</value>
                            <newvalue>ARPHRD_SLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>257</value>
                            <newvalue>ARPHRD_CSLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>258</value>
                            <newvalue>ARPHRD_SLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>259</value>
                            <newvalue>ARPHRD_CSLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>260</value>
                            <newvalue>Notional KISS type</newvalue>
                        </mapping>
                        <mapping>
                            <value>264</value>
                            <newvalue>ARPHRD_ADAPT</newvalue>
                        </mapping>
                        <mapping>
                            <value>270</value>
                            <newvalue>ARPHRD_ROSE</newvalue>
                        </mapping>
                        <mapping>
                            <value>271</value>
                            <newvalue>CCITT X.25</newvalue>
                        </mapping>
                        <mapping>
                            <value>272</value>
                            <newvalue>Boards with X.25 in firmware</newvalue>
                        </mapping>
                        <mapping>
                            <value>280</value>
                            <newvalue>Controller Area Network</newvalue>
                        </mapping>
                        <mapping>
                            <value>512</value>
                            <newvalue>ARPHRD_PPP</newvalue>
                        </mapping>
                        <mapping>
                            <value>513</value>
                            <newvalue>Cisco HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>516</value>
                            <newvalue>LAPB</newvalue>
                        </mapping>
                        <mapping>
                            <value>517</value>
                            <newvalue>Digital's DDCMP protocol</newvalue>
                        </mapping>
                        <mapping>
                            <value>518</value>
                            <newvalue>Raw HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>519</value>
                            <newvalue>Raw IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>768</value>
                            <newvalue>IPIP tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>769</value>
                            <newvalue>IP6IP6 tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>770</value>
                            <newvalue>Frame Relay Access Device</newvalue>
                        </mapping>
                        <mapping>
                            <value>771</value>
                            <newvalue>SKIP vif</newvalue>
                        </mapping>
                        <mapping>
                            <value>772</value>
                            <newvalue>Loopback device</newvalue>
                        </mapping>
                        <mapping>
                            <value>773</value>
                            <newvalue>Localtalk device</newvalue>
                        </mapping>
                        <mapping>
                            <value>774</value>
                            <newvalue>Fiber Distributed Data Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>775</value>
                            <newvalue>AP1000 BIF</newvalue>
                        </mapping>
                        <mapping>
                            <value>776</value>
                            <newvalue>sit0 device - IPv6-in-IPv4</newvalue>
                        </mapping>
                        <mapping>
                            <value>777</value>
                            <newvalue>IP over DDP tunneller</newvalue>
                        </mapping>
                        <mapping>
                            <value>778</value>
                            <newvalue>GRE over IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>779</value>
                            <newvalue>PIMSM register interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>780</value>
                            <newvalue>High Performance Parallel Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>781</value>
                            <newvalue>Nexus 64Mbps Ash</newvalue>
                        </mapping>
                        <mapping>
                            <value>782</value>
                            <newvalue>Acorn Econet</newvalue>
                        </mapping>
                        <mapping>
                            <value>783</value>
                            <newvalue>Linux-IrDA</newvalue>
                        </mapping>
                        <mapping>
                            <value>784</value>
                            <newvalue>Point to point fibrechannel</newvalue>
                        </mapping>
                        <mapping>
                            <value>785</value>
                            <newvalue>Fibrechannel arbitrated loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>786</value>
                            <newvalue>Fibrechannel public loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>787</value>
                            <newvalue>Fibrechannel fabric</newvalue>
                        </mapping>
                        <mapping>
                            <value>800</value>
                            <newvalue>Magic type ident for TR</newvalue>
                        </mapping>
                        <mapping>
                            <value>801</value>
                            <newvalue>IEEE 802.11</newvalue>
                        </mapping>
                        <mapping>
                            <value>802</value>
                            <newvalue>IEEE 802.11 + Prism2 header</newvalue>
                        </mapping>
                        <mapping>
                            <value>803</value>
                            <newvalue>IEEE 802.11 + radiotap header</newvalue>
                        </mapping>
                        <mapping>
                            <value>804</value>
                            <newvalue>ARPHRD_IEEE802154</newvalue>
                        </mapping>
                        <mapping>
                            <value>805</value>
                            <newvalue>IEEE 802.15.4 network monitor</newvalue>
                        </mapping>
                        <mapping>
                            <value>820</value>
                            <newvalue>PhoNet media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>821</value>
                            <newvalue>PhoNet pipe header</newvalue>
                        </mapping>
                        <mapping>
                            <value>822</value>
                            <newvalue>CAIF media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>823</value>
                            <newvalue>GRE over IPv6</newvalue>
                        </mapping>
                        <mapping>
                            <value>824</value>
                            <newvalue>Netlink header</newvalue>
                        </mapping>
                        <mapping>
                            <value>825</value>
                            <newvalue>IPv6 over LoWPAN</newvalue>
                        </mapping>
                        <mapping>
                            <value>826</value>
                            <newvalue>Vsock monitor header</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>87f8bb12c092497f92731edfa47308fb</uuid>
                    <name>Linux Service State</name>
                    <mappings>
                        <mapping>
                            <value>1</value>
                            <newvalue>Active</newvalue>
                        </mapping>
                        <mapping>
                            <value>0</value>
                            <newvalue>Inactive</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>1319d780be1848ca867b27aaa932ea74</uuid>
                    <name>zabbix.host.available</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>not available</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>available</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>3de4758123714e238d28b0830d84813c</uuid>
                    <name>Zabbix agent ping status</name>
                    <mappings>
                        <mapping>
                            <value>1</value>
                            <newvalue>Up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
    </templates>
</zabbix_export>
